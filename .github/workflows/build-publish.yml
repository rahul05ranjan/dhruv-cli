name: Build & Publish

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: npm-publish
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run tests
        run: npm run test:ci

      - name: Run linting
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Generate documentation
        run: npm run docs

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Check if version needs update
        id: check_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version exists on NPM
          if npm view @rahul05ranjan/dhruv-cli@$CURRENT_VERSION version 2>/dev/null; then
            echo "needs_version_bump=true" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists on NPM, needs bump"
          else
            echo "needs_version_bump=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION is new, can publish"
          fi

      - name: Bump version automatically
        if: steps.check_version.outputs.needs_version_bump == 'true' && github.event_name == 'push'
        run: |
          # Get commit messages to determine version bump type
          COMMIT_MSG=$(git log -1 --pretty=%B)
          
          if [[ $COMMIT_MSG =~ BREAKING\ CHANGE ]] || [[ $COMMIT_MSG =~ ^feat!: ]] || [[ $COMMIT_MSG =~ ^fix!: ]]; then
            VERSION_TYPE="major"
          elif [[ $COMMIT_MSG =~ ^feat: ]]; then
            VERSION_TYPE="minor"
          else
            VERSION_TYPE="patch"
          fi
          
          echo "Auto-bumping version: $VERSION_TYPE"
          npm version $VERSION_TYPE --no-git-tag-version
          
          # Commit the version bump
          git add package.json
          git commit -m "chore: bump version to $(node -p "require('./package.json').version") [skip ci]"
          git push

      - name: Manual version bump
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          git add package.json
          git commit -m "chore: bump version to $(node -p "require('./package.json').version") [skip ci]"
          git push

      - name: Get final version
        id: final_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Final version to publish: $VERSION"

      - name: Create Git tag
        run: |
          git tag v${{ steps.final_version.outputs.version }}
          git push origin v${{ steps.final_version.outputs.version }}

      - name: Publish to NPM
        run: |
          echo "Publishing version ${{ steps.final_version.outputs.version }}"
          npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.final_version.outputs.version }}
          name: Release v${{ steps.final_version.outputs.version }}
          body: |
            ## What's Changed
            
            Version ${{ steps.final_version.outputs.version }} of dhruv-cli
            
            ### Installation
            ```bash
            npm install -g @rahul05ranjan/dhruv-cli@${{ steps.final_version.outputs.version }}
            ```
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.check_version.outputs.current_version }}...v${{ steps.final_version.outputs.version }}
          files: |
            dist/**
            docs/api/**
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/api
          publish_branch: gh-pages
          enable_jekyll: false

      - name: Notify success
        if: success()
        run: |
          echo "‚úÖ Successfully published @rahul05ranjan/dhruv-cli@${{ steps.final_version.outputs.version }}"
          echo "üì¶ NPM: https://www.npmjs.com/package/@rahul05ranjan/dhruv-cli"
          echo "üìñ Documentation: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "üè∑Ô∏è Release: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.final_version.outputs.version }}"
